"0","# Cross Validation: # of PC's"
"0",""
"0","set.seed(42)"
"0","ids <- sample(1:10, nrow(reds_train), replace = TRUE)"
"0","CV_plot_a <- {}"
"0","CV_plot_b <- {}"
"0","Q = 11"
"0","for(i in 1:Q){"
"0","  CV_tmp_a <- {}"
"0","  CV_tmp_b <- {}"
"0","  for(k in 1:10){"
"0","    reds_train_train = reds_train[!(ids == k),]"
"0","    reds_train_val = reds_train[ids == k,]"
"0","    pc_t <- princomp(reds_train_train[,1:11],cor=T)"
"0","    pct_scores <- as.data.frame(pc_t$scores[,1:i])"
"0","    pc_v <- princomp(reds_train_val[,1:11],cor=T)"
"0","    pcv_scores <- as.data.frame(pc_v$scores[,1:i])"
"0","    train_df <- data.frame(pc_t$scores[,1:i])"
"0","    t_names = {}"
"0","    for(q in 1:i){"
"0","      t_names = append(t_names, paste(""pc"", q, sep=""""))"
"0","    }"
"0","    names(pct_scores) <- t_names"
"0","    names(pcv_scores) <- t_names"
"0","    "
"0","    tdf <- cbind(pct_scores, quality = reds_train_train$quality)"
"0","    vdf <- cbind(pcv_scores, quality = reds_train_val$quality)"
"0",""
"0","    model_multi <- nnet::multinom(quality ~ . , data = tdf, trace = F)"
"0","    "
"0","    CV_tmp_a[k] <- sum(predict(model_multi, newdata= vdf) != reds_train_val$quality) / nrow(vdf)"
"0","    CV_tmp_b[k] <- sum((as.numeric(predict(model_multi, newdata = vdf)) - as.numeric(vdf$quality))^2)"
"0","  }"
"0","  CV_plot_a[i] = mean(CV_tmp_a)"
"0","  CV_plot_b[i] = mean(CV_tmp_b)/nrow(vdf)"
"0","  "
"0","}"
"0",""
"0",""
"0","plot(1:Q, CV_plot_a, type = ""b"", pch=19, main = ""10-fold CV with Two Different Metrics"","
"0","     ylab = ""Prediction Error Rate"", xlab = ""# of Principal Components"")"
